# Development Dockerfile for HydraFlow-X
# Optimized for development with hot reload and debugging

FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV CMAKE_BUILD_TYPE=Debug
ENV CXX_STANDARD=23

# Install development dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    pkg-config \
    libssl-dev \
    libpq-dev \
    libcurl4-openssl-dev \
    libnlohmann-json3-dev \
    libboost-all-dev \
    ninja-build \
    clang-15 \
    libc++-15-dev \
    libc++abi-15-dev \
    gdb \
    lldb \
    valgrind \
    strace \
    htop \
    curl \
    vim \
    nano \
    tree \
    jq \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js for web dashboard development
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs

# Set compiler to clang
ENV CC=clang-15
ENV CXX=clang++-15

# Create app directory
WORKDIR /app

# Create non-root user for development
RUN useradd -m -s /bin/bash -G sudo hydradev && \
    echo 'hydradev ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# Create necessary directories
RUN mkdir -p /opt/hydraflow/{config,logs,data,backups} && \
    chown -R hydradev:hydradev /opt/hydraflow && \
    chown -R hydradev:hydradev /app

# Copy configuration templates
COPY config.env.example /opt/hydraflow/config/
COPY config/hydraflow.example.json /opt/hydraflow/config/

# Switch to development user
USER hydradev

# Set environment variables for development
ENV PATH="/opt/hydraflow/bin:$PATH"
ENV HFX_CONFIG_PATH="/opt/hydraflow/config"
ENV HFX_LOG_PATH="/opt/hydraflow/logs"
ENV HFX_DATA_PATH="/opt/hydraflow/data"
ENV HFX_ENVIRONMENT=development
ENV HFX_DEBUG_MODE=true

# Expose ports
EXPOSE 8080 9090 2345

# Health check for development
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8080/api/health || exit 1

# Development build script
COPY --chown=hydradev:hydradev scripts/dev-build.sh /app/
RUN chmod +x /app/dev-build.sh

# Default command for development
CMD ["/app/dev-build.sh"]

version: '3.8'

services:
  # HydraFlow-X Main Trading Engine
  hydraflow-x:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        CMAKE_BUILD_TYPE: Release
    container_name: hydraflow-x-engine
    restart: unless-stopped
    ports:
      - "8080:8080"   # Web Dashboard
      - "9090:9090"   # Prometheus Metrics
    volumes:
      - ./config:/opt/hydraflow/config:ro
      - hydraflow-logs:/opt/hydraflow/logs
      - hydraflow-data:/opt/hydraflow/data
      - hydraflow-backups:/opt/hydraflow/backups
    environment:
      - HFX_ENVIRONMENT=production
      - HFX_LOG_LEVEL=INFO
      - HFX_WEB_PORT=8080
      - HFX_PROMETHEUS_PORT=9090
    depends_on:
      - postgres
      - redis
      - prometheus
    networks:
      - hydraflow-network
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 4G
        reservations:
          cpus: '2.0'
          memory: 2G
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hydraflow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: hydraflow
      POSTGRES_USER: hydraflow
      POSTGRES_PASSWORD: ${HFX_DB_PASSWORD:-changeme}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - hydraflow-network
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hydraflow-redis
    restart: unless-stopped
    command: >
      redis-server
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --appendonly yes
      --appendfsync everysec
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - hydraflow-network

  # ClickHouse Analytics Database
  clickhouse:
    image: clickhouse/clickhouse-server:23-alpine
    container_name: hydraflow-clickhouse
    restart: unless-stopped
    environment:
      CLICKHOUSE_DB: hydraflow_analytics
      CLICKHOUSE_USER: hydraflow
      CLICKHOUSE_PASSWORD: ${HFX_CLICKHOUSE_PASSWORD:-changeme}
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./scripts/clickhouse-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - hydraflow-network
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: hydraflow-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9091:9090"
    networks:
      - hydraflow-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: hydraflow-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-changeme}
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "3000:3000"
    networks:
      - hydraflow-network
    depends_on:
      - prometheus

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: hydraflow-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    networks:
      - hydraflow-network
    depends_on:
      - hydraflow-x
      - grafana

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: hydraflow-node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - "9100:9100"
    networks:
      - hydraflow-network

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  clickhouse-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  hydraflow-logs:
    driver: local
  hydraflow-data:
    driver: local
  hydraflow-backups:
    driver: local
  nginx-logs:
    driver: local

networks:
  hydraflow-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
